spring.application.name=bookMyShow

# Database Configuration (from environment variables)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/bookMyShow}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = update

# Redis Configuration (from environment variables)
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.timeout=10000

# Kafka Configuration (from environment variables)
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.producer.properties.spring.json.type.mapping=ticket:com.movie.bookMyShow.dto.TicketDTO
spring.kafka.consumer.book-movie-group-id=book_movie
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.movie.bookMyShow.dto
spring.kafka.consumer.properties.spring.json.use.type.headers=true
spring.kafka.consumer.properties.spring.json.value.default.type=com.movie.bookMyShow.dto.TicketDTO
server.port=8080

spring.profiles.active=${SPRING_PROFILES_ACTIVE:ethereum}
app.cors.allowed-origin=${APP_CORS_ALLOWED_ORIGIN:http://localhost:3000}
jwt.secret=${JWT_SECRET:testSecretKey123456789012345678901234567890123456789012345678901234567890} 