spring.application.name=bookMyShow
spring.datasource.url = jdbc:postgresql://localhost:5432/bookMyShow
spring.datasource.username = postgres
spring.datasource.password = your_password_here

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=10000

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.producer.properties.spring.json.type.mapping=ticket:com.movie.bookMyShow.dto.TicketDTO
spring.kafka.consumer.book-movie-group-id=book_movie
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.movie.bookMyShow.dto
spring.kafka.consumer.properties.spring.json.use.type.headers=true
spring.kafka.consumer.properties.spring.json.value.default.type=com.movie.bookMyShow.dto.TicketDTO
server.port=8080

spring.profiles.active=ethereum
app.cors.allowed-origin=http://localhost:3000
jwt.secret=your_jwt_secret_here 